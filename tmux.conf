# enable mouse
set -g mouse on

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# only this line might not be enough
set -g default-terminal "xterm-256color"

# Needs this line also to overrides the default color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# support colors for undercurl
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# for running image.nvim
set -gq allow-passthrough on
# for auto disable image when switching window
set -g visual-activity off

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'odedlaz/tmux-onedark-theme'  # one dark theme
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'fcsonline/tmux-thumbs'

set -g @thumbs-unique enabled
set -g @thumbs-position off_left
set -g @thumbs-hint-bg-color yellow
set -g @thumbs-hint-fg-color black
set -g @thumbs-bg-color green
set -g @thumbs-fg-color black
set -g @thumbs-select-bg-color red
set -g @thumbs-select-fg-color black
set -g @thumbs-contrast 0
set -g @thumbs-alphabet colemak
set -g @thumbs-command 'echo -n {} | xclip -selection clipboard' # copy to system clipboard

run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux


# set prefix key to Ctrl-space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# tmux vim navigator plugin with custom key bindings

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'm-n' if-shell "$is_vim" 'send-keys m-n' 'select-pane -L'
bind-key -n 'm-e' if-shell "$is_vim" 'send-keys m-e' 'select-pane -D'
bind-key -n 'm-u' if-shell "$is_vim" 'send-keys m-u' 'select-pane -U'
bind-key -n 'm-i' if-shell "$is_vim" 'send-keys m-i' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'm-\\' if-shell \"$is_vim\" 'send-keys m-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'm-\\' if-shell \"$is_vim\" 'send-keys m-\\\\'  'select-pane -l'"

bind-key -n 'm-Space' if-shell "$is_vim" 'send-keys m-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'm-n' select-pane -L
bind-key -T copy-mode-vi 'm-e' select-pane -D
bind-key -T copy-mode-vi 'm-u' select-pane -U
bind-key -T copy-mode-vi 'm-i' select-pane -R
bind-key -T copy-mode-vi 'm-\' select-pane -l
bind-key -T copy-mode-vi 'm-Space' select-pane -t:.+


# my key bindings
# don't allow continuous switch, not suitable for current workflow
bind -T prefix e next-window
bind -T prefix n previous-window

# SECTION: setting the theme, removehe widgets
set -g @onedark_date_format "%Y/%m/%d"
# set -g @onedark_time_format " "

# settings for copy mode
# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# split pane from current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# config for pain control
set-option -g @pane_resize "10"

# remap binding key for pain control
unbind-key -T prefix H
unbind-key -T prefix J
unbind-key -T prefix K
unbind-key -T prefix L

bind-key -r -T prefix R resize-pane -L 10
bind-key -r -T prefix F resize-pane -U 10
bind-key -r -T prefix S resize-pane -D 10
bind-key -r -T prefix T resize-pane -R 10

set -g @resurrect-strategy-nvim 'session'

# rename window and session
bind-key -T prefix F2 command-prompt -I '#W' "rename-window %%"
bind-key -T prefix C-F2 command-prompt -I '#S' "rename-session %%"

bind-key N command-prompt -p "Enter session name:" "new-session -s '%%'"
bind-key + split-window -h -c "#{pane_current_path}" \; split-window -v -c "#{pane_current_path}" \; select-pane -L \; split-window -v -c "#{pane_current_path}"

bind-key    -T copy-mode    q                 send-keys -X cancel

# rebind prev and next session so they can be consecutive
unbind-key -T prefix (
unbind-key -T prefix )
bind-key -r -T prefix (  switch-client -n
bind-key -r -T prefix ) switch-client -p

# tmux timer
bind -T  prefix G run-shell 'bash /home/leo/.config/tmux/plugins/tmux_tempus.sh start > /dev/null'\; refresh-client -S

bind -T prefix g run-shell 'bash /home/leo/.config/tmux/plugins/tmux_tempus.sh pause > /dev/null'\; refresh-client -S

bind-key -T prefix P command-prompt -p "Start Timer from:" 'run-shell "bash /home/leo/.config/tmux/plugins/tmux_tempus.sh start '%1' > /dev/null"'\; refresh-client -S

wg_timer="#(tail /tmp/tmux_tempus_bar)"

# An example status bar config, including only tmux-tempus, date and time:

set -g @onedark_widgets "$wg_timer"

run '~/.tmux/plugins/tpm/tpm'
